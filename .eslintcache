[{"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\index.js":"1","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\App.js":"2","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\Routes.js":"3","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\core\\Home.js":"4","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\Backend.js":"5","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\core\\Base.js":"6","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\core\\Menu.js":"7","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\SignIn.js":"8","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\SignUp.js":"9","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\auth\\helper\\index.js":"10","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\SignOut.js":"11","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\AdminDashBoard.js":"12","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\UserDashBoard.js":"13","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\auth\\helper\\PrivateRoute.js":"14","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\auth\\helper\\AdminRoute.js":"15","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\CreateCategory.js":"16","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\helper\\adminapicalls.js":"17","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\CreateProduct.js":"18","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\ManageProducts.js":"19","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\UpdateProduct.js":"20","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\ManageCategories.js":"21","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\UpdateCategory.js":"22"},{"size":162,"mtime":1611494300024,"results":"23","hashOfConfig":"24"},{"size":119,"mtime":1611492874790,"results":"25","hashOfConfig":"24"},{"size":1793,"mtime":1612339214141,"results":"26","hashOfConfig":"24"},{"size":591,"mtime":1611555332586,"results":"27","hashOfConfig":"24"},{"size":49,"mtime":1611494392481,"results":"28","hashOfConfig":"24"},{"size":1014,"mtime":1611583632976,"results":"29","hashOfConfig":"24"},{"size":2455,"mtime":1612076219673,"results":"30","hashOfConfig":"24"},{"size":3269,"mtime":1612075911331,"results":"31","hashOfConfig":"24"},{"size":3123,"mtime":1611903623566,"results":"32","hashOfConfig":"24"},{"size":2374,"mtime":1611933598987,"results":"33","hashOfConfig":"24"},{"size":734,"mtime":1611848009590,"results":"34","hashOfConfig":"24"},{"size":2582,"mtime":1612338425415,"results":"35","hashOfConfig":"24"},{"size":231,"mtime":1612074590572,"results":"36","hashOfConfig":"24"},{"size":577,"mtime":1612074896902,"results":"37","hashOfConfig":"24"},{"size":612,"mtime":1612074918962,"results":"38","hashOfConfig":"24"},{"size":1962,"mtime":1612098916615,"results":"39","hashOfConfig":"24"},{"size":3741,"mtime":1612350686664,"results":"40","hashOfConfig":"24"},{"size":6100,"mtime":1612335376048,"results":"41","hashOfConfig":"24"},{"size":2521,"mtime":1612178306755,"results":"42","hashOfConfig":"24"},{"size":6953,"mtime":1612336362717,"results":"43","hashOfConfig":"24"},{"size":2564,"mtime":1612339519844,"results":"44","hashOfConfig":"24"},{"size":2418,"mtime":1612351409751,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"wooezu",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\index.js",[],["99","100"],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\App.js",[],["101","102"],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\Routes.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\core\\Home.js",["103"],"import React from 'react'\r\nimport {API} from '../Backend';\r\nimport '../styles.css';\r\nimport Base from './Base';\r\nexport default function Home() {\r\n    return (\r\n        <Base title=\"Home Page\">\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          <button className=\"btn btn-success\">TEST</button>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <button className=\"btn btn-success\">TEST</button>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <button className=\"btn btn-success\">TEST</button>\r\n        </div>\r\n      </div>\r\n    </Base>\r\n    )\r\n}\r\n","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\Backend.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\core\\Base.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\core\\Menu.js",["104"],"import React,{Fragment} from 'react';\r\nimport {Link,Redirect,withRouter} from 'react-router-dom';\r\nimport {isAuthinticated, signout} from '../auth/helper/index';\r\n\r\nconst currentTab = ( history, path ) => {\r\n    // console.log(history);\r\n    // console.log(history.location);\r\n    // console.log(history.location.pathname);\r\n    if (history.location.pathname === path) {\r\n      return { color: \"#2ecc72\" };\r\n    } else {\r\n      return { color: \"#FFFFFF\" };\r\n    }\r\n  }\r\n\r\nconst Menu = ({history}) => {\r\n    return (\r\n        <div>\r\n        <ul className='nav bg-dark nav-tabs'>\r\n            <li className='nav-item'>\r\n                <Link style={currentTab(history, \"/\")}  className='nav-link'  to=\"/\">Home</Link>\r\n            </li>\r\n            {isAuthinticated() && isAuthinticated().user.role === 0 && (\r\n                <li className='nav-item'>\r\n                <Link style={currentTab(history,\"/dashboard\")} className='nav-link'  to='/user/dashboard'>U. Dashboard</Link>\r\n            </li>\r\n            )}\r\n\r\n            {isAuthinticated() && isAuthinticated().user.role === 1 && (\r\n                <li className='nav-item'>\r\n                <Link style={currentTab(history,\"/dashboard\")} className='nav-link'  to='/admin/dashboard'>A. Dashboard</Link>\r\n            </li>\r\n            )}\r\n            \r\n\r\n            {!isAuthinticated() && <Fragment> {/* if the user is not signed in then only show it*/ }\r\n                {/*Fragment is just a component to hold multiple thigs together without affecting their forms (whether if we wrote div over here whole things will scrwed up)*/}\r\n            <li className='nav-item'>\r\n                <Link style={currentTab(history,\"/signup\")} className='nav-link' to='/signup'>Signup</Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n                <Link style={currentTab(history,\"/signin\")} className='nav-link' to='/signin'>Signin</Link>\r\n            </li>\r\n            </Fragment>}\r\n            {isAuthinticated() && (  //if the user signed in then only show and after clicking redirect to home screen\r\n            <li className='nav-item'>\r\n                <span className='nav-link text-warning'\r\n                 onClick={()=>{\r\n                     signout(()=> {\r\n                        history.push('/');\r\n                    })\r\n                }}>SignOut</span>\r\n                 </li>)}\r\n           \r\n        </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Menu);","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\SignIn.js",["105","106","107"],"import React, { useState } from \"react\";\r\nimport Base from \"../core/Base\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signin, authinticate, isAuthinticated } from \"../auth/helper/index\";\r\nimport UserDashBoard from './UserDashBoard';\r\nimport AdminDashBoard from './AdminDashBoard';\r\nexport default function SignIn() {\r\n    \r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    error: false,\r\n    loading: false,\r\n    isRedirect: false,\r\n  });\r\n\r\n  const { email, password, error, loading, isRedirect } = values;\r\n  const {user} = isAuthinticated(); //here user will get which is already saved in localstorage of react\r\n  //for the first time before signin it will be undefined after that any time you check in it will that user which is store in localstorage of react\r\n  //and not going get remove unless user signout\r\n  console.log(user);\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, loading: true, [name]: event.target.value });\r\n  };\r\n\r\n  const onSubmit = event => {\r\n    event.preventDefault();\r\n    signin({ email, password })\r\n      .then((data) => {\r\n          console.log(data); //this data will have user token and user itself\r\n        if (data.error) {\r\n          setValues({\r\n            ...values,\r\n            error: data.error,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          authinticate(data, () => {   //this method sets user in localstorage of react\r\n            setValues({\r\n              email: \"\",\r\n              password: \"\",\r\n              isRedirect: true,\r\n            });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"error in signin\");\r\n      });\r\n  };\r\n\r\n  const errorMessage = () => {\r\n    return (\r\n        <div className='row'>\r\n    <div className=\"col-md-6 offset-sm-3\">\r\n      <div\r\n        className=\"alert alert-danger\"\r\n        style={{ display: error ? \"\" : \"none\" }}\r\n      >\r\n        {error}\r\n      </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const performRedirect = () =>{\r\n    if(isRedirect)\r\n    {\r\n        console.log(user);\r\n   if(user && user.role === 1 )\r\n       return <Redirect to='/admin/dashboard'/>\r\n   else \r\n       return <Redirect to='/user/dashboard'/>\r\n   }\r\n   if(isAuthinticated()){ \r\n     return <Redirect to='/'/>\r\n   }\r\n  }\r\n\r\n  const signInForm = () => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 offset-sm-3\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Email</label>\r\n              <input type=\"email\" value={email} className=\"form-control\" onChange={handleChange('email')}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password</label>\r\n              <input type=\"password\" value={password} className=\"form-control\" onChange={handleChange('password')}/>\r\n            </div>\r\n            <button className=\"btn bg-success btn-block text-white\" onClick={onSubmit}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Base title=\"SignIn Page\" description=\"This is sign in page\">\r\n      {errorMessage()}\r\n      {signInForm()}\r\n      {performRedirect()}\r\n    </Base>\r\n  );\r\n}\r\n","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\SignUp.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\auth\\helper\\index.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\SignOut.js",["108"],"import React, { useState } from \"react\";\r\nimport { signout } from \"../auth/helper/index\";\r\nimport Base from \"../core/Base\";\r\n\r\nexport default function SignOut() {\r\n  const [error, setError] = useState(false);\r\n\r\n  const showMessage = () => {\r\n    signout()\r\n      .then(data => {\r\n        // setError(true);\r\n        console.log(data);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <Base title=\"SignIn Page\" description=\"This is sign in page\">\r\n      <div\r\n        className=\"alert alert-success\"\r\n        style={{ display: error ? \"\" : \"none\" }}\r\n      >\r\n        signout success\r\n      </div>\r\n      <h1 className='text-white'>This is signout page</h1>\r\n      { showMessage() }\r\n    </Base>\r\n  );\r\n}\r\n","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\AdminDashBoard.js",["109"],"import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthinticated } from '../auth/helper';\r\nimport Base from '../core/Base';\r\nexport default function AdminDashBoard() {\r\n\r\n    const {user:{name,email,role}} = isAuthinticated();\r\n\r\n    const leftAdminPart = () =>{\r\n        return (\r\n            <div className='card bg-dark'>\r\n                <h4 className=\"card-header text-white\">Admin Activities</h4>\r\n                <ul className='list-group'>\r\n                    <li className='list-group-item'>\r\n                        <Link to='/admin/create/category' className='nav-link text-success'>Create Category</Link>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        <Link to='/admin/create/product' className='nav-link text-success'>Create Product</Link>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        <Link to='/admin/categories' className='nav-link text-success'>Manage Categories</Link>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        <Link to='/admin/products' className='nav-link text-success'>Manage Product</Link>\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                        <Link to='/admin/create/category' className='nav-link text-success'>Manage Order</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>   \r\n        )\r\n    }\r\n    const righAdminPart = () => {\r\n        return (\r\n            <div className='card'>\r\n                <h1 className=' bg-dark text-white card-header'>Admin Information</h1>\r\n                <ul className='list-group'>\r\n                    <li className='list-group-item'>\r\n                    <span className='badge bg-success mr-2' >Name:</span>{name}\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                    <span className='badge bg-success mr-2' >Email:</span>{email}\r\n                    </li>\r\n                    <li className='list-group-item'>\r\n                    <span className='badge bg-danger mr-2' >Admin Area</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            )\r\n    }\r\n    return (\r\n        <Base title='Admin Dashboard' className='bg-success p-5 container'>\r\n           <div className=\"row\">\r\n               <div className='col-3' >{leftAdminPart()}</div>\r\n               <div className='col-9'>{righAdminPart()}</div>\r\n           </div>\r\n        </Base>\r\n    )\r\n}\r\n","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\user\\UserDashBoard.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\auth\\helper\\PrivateRoute.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\auth\\helper\\AdminRoute.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\CreateCategory.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\helper\\adminapicalls.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\CreateProduct.js",["110","111","112","113","114","115","116","117","118"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthinticated } from \"../auth/helper\";\r\nimport Base from \"../core/Base\";\r\nimport { createProduct, getCategories ,updateProduct} from \"./helper/adminapicalls\";\r\n\r\nexport default function CreateProduct({ history }) {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        stock: \"\",\r\n        photo: \"\",\r\n        categories: [],\r\n        category: \"\",\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: \"\",\r\n        isRedirect: false,\r\n        formData: \"\",\r\n    });\r\n\r\n    const {\r\n        name,\r\n        price,\r\n        description,\r\n        stock,\r\n        photo,\r\n        categories,\r\n        category,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        isRedirect,\r\n        formData,\r\n    } = values;\r\n    const { user, token } = isAuthinticated();\r\n    useEffect(() => {\r\n        getAllCategories();\r\n    }, [])\r\n\r\n    const getAllCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({ ...values, categories: data, formData: new FormData() })\r\n            }\r\n        })\r\n    }\r\n\r\n    const createProductForm = () => {\r\n        return (\r\n            <form>\r\n                <span>Post photo</span>\r\n                <div className=\"form-group\">\r\n                    <label className=\"btn btb-block btn-success\">\r\n                        <input type=\"file\" name=\"photo\" placeholder=\"Choose a file\"\r\n                            onChange={handleChange('photo')}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        onChange={handleChange('name')}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"Description\"\r\n                        onChange={handleChange('description')}\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"price\"\r\n                        placeholder=\"Price\"\r\n                        onChange={handleChange('price')}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <select className=\"form-control\" placeholder=\"category\" onChange={handleChange('category')}>\r\n                        <option value=\"\">Select</option>\r\n                        {categories.map((item, index) => {\r\n                            return <option key={index} value={item._id}>{item.name}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" type=\"number\" placeholder=\"Stock\"\r\n                        onChange={handleChange('stock')}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-outline-success mb-3\" type=\"submit\" onClick={onSubmit}>\r\n                    Create Product\r\n        </button>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value); //set form data and then pass to db\r\n        setValues({ ...values, [name]: event.target.value });\r\n    }\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true })\r\n        updateProduct(user._id, token, formData) //passing form data to backend\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: '',\r\n                        description: '',\r\n                        photo: '',\r\n                        stock: '',\r\n                        price: '',\r\n                        loading: false,\r\n                        error: false,\r\n                        isRedirect: true,\r\n                        createdProduct: data.name\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const errorMessage = () => {\r\n        return <div className='alert alert-danger mt-2' style={{ display: !error && 'none' }}>\r\n            {error}\r\n        </div>\r\n    }\r\n\r\n    const successMessage = () => {\r\n        return <div className='alert alert-success mt-2' style={{ display: !createdProduct && 'none' }}>\r\n            {createdProduct} Created Successfully\r\n    </div>\r\n    }\r\n    return (\r\n        <Base\r\n            title=\"Create Product\"\r\n            description=\"create product here\"\r\n            className=\"container bg-info p-4\"\r\n        >\r\n            <Link\r\n                to=\"/admin/dashboard\"\r\n                className=\"btn btn-md bg-dark text-white mb-2\"\r\n            >\r\n                Admin Dashboard\r\n      </Link>\r\n            <div className=\"row bg-dark text-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {errorMessage()}\r\n                    {successMessage()}\r\n                    {createProductForm()}\r\n                    {isRedirect && setTimeout(() => {\r\n                        history.push('/admin/dashboard');\r\n                    }, 2000)}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    );\r\n}\r\n","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\ManageProducts.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\UpdateProduct.js",["119","120","121","122"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isAuthinticated } from \"../auth/helper\";\r\nimport Base from \"../core/Base\";\r\nimport { updateProduct, getCategories, getProduct } from \"./helper/adminapicalls\";\r\n\r\nexport default function UpdateProduct({ history , match }) {\r\n    const [values, setValues] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: \"\",\r\n        stock: \"\",\r\n        photo: \"\",\r\n        categories: [],\r\n        category: \"\",\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: \"\",\r\n        isRedirect: false,\r\n        formData: \"\",\r\n    });\r\n\r\n    const {\r\n        name,\r\n        price,\r\n        description,\r\n        stock,\r\n        photo,\r\n        categories,\r\n        category,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        isRedirect,\r\n        formData,\r\n    } = values;\r\n    // const [product ,setProduct] = useState({});\r\n\r\n    const { user, token } = isAuthinticated();\r\n\r\n    useEffect(() => {\r\n        getThisProduct(match.params.productId);\r\n    }, [])\r\n\r\n    const getAllCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error })\r\n            } else {\r\n                setValues({ categories: data ,formData:new FormData()}) //if you pass ...values code fails \r\n            }\r\n        })\r\n    }\r\n\r\n    const getThisProduct = (productId) =>{\r\n        getProduct(productId).then(data => {\r\n            console.log(data);\r\n            if(data.error){\r\n                    console.log(data.error);\r\n            }else{\r\n                getAllCategories();\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    stock: data.stock,\r\n                    price: data.price,\r\n                    formData : new FormData()\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const createProductForm = () => {\r\n        return (\r\n            <form>\r\n                <span>Post photo</span>\r\n                <div className=\"form-group\">\r\n                    <label className=\"btn btb-block btn-success\">\r\n                        <input type=\"file\" name=\"photo\" placeholder=\"Choose a file\"\r\n                            onChange={handleChange('photo')}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Name\"\r\n                        value={name}\r\n                        onChange={handleChange('name')}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"Description\"\r\n                        value={description}\r\n                        onChange={handleChange('description')}\r\n\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"number\"\r\n                        name=\"price\"\r\n                        placeholder=\"Price\"\r\n                        value={price}\r\n                        onChange={handleChange('price')}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <select className=\"form-control\" placeholder=\"category\" onChange={handleChange('category')}>\r\n                    <option value=''>Select</option>   \r\n                        {categories.map((item, index) => {\r\n                            return <option key={index} value={item._id}>{item.name}</option>\r\n                        })}\r\n                    </select>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input className=\"form-control\" type=\"number\" placeholder=\"Stock\" value={stock}\r\n                        onChange={handleChange('stock')}\r\n                    />\r\n                </div>\r\n                <button className=\"btn btn-outline-success mb-3\" type=\"submit\" onClick={onSubmit}>\r\n                    Update Product\r\n        </button>\r\n            </form>\r\n        );\r\n    };\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value); //set form data and then pass to db\r\n        setValues({ ...values, [name]: event.target.value });\r\n    }\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true })\r\n        updateProduct(user._id, token,match.params.productId, formData) //passing form data to backend\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: '',\r\n                        description: '',\r\n                        photo: '',\r\n                        stock: '',\r\n                        price: '',\r\n                        loading: false,\r\n                        error: false,\r\n                        isRedirect: true,\r\n                        createdProduct: data.name\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const errorMessage = () => {\r\n        return <div className='alert alert-danger mt-2' style={{ display: !error && 'none' }}>\r\n            {error}\r\n        </div>\r\n    }\r\n\r\n    const successMessage = () => {\r\n        return <div className='alert alert-success mt-2' style={{ display: !createdProduct && 'none' }}>\r\n            {createdProduct} Created Successfully\r\n    </div>\r\n    }\r\n    return (\r\n        <Base\r\n            title=\"Update Product\"\r\n            description=\"Update product here\"\r\n            className=\"container bg-info p-4\"\r\n        >\r\n            <Link\r\n                to=\"/admin/dashboard\"\r\n                className=\"btn btn-md bg-dark text-white mb-2\"\r\n            >\r\n                Admin Dashboard\r\n      </Link>\r\n            <div className=\"row bg-dark text-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {errorMessage()}\r\n                    {successMessage()}\r\n                    {createProductForm()}\r\n                    {isRedirect && setTimeout(() => {\r\n                        history.push('/admin/dashboard');\r\n                    }, 2000)}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    );\r\n}\r\n","C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\ManageCategories.js",[],"C:\\Users\\dRaGoO0n\\Desktop\\Project\\frontend\\src\\admin\\UpdateCategory.js",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"124","replacedBy":"128"},{"ruleId":"126","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":2,"column":9,"nodeType":"132","messageId":"133","endLine":2,"endColumn":12},{"ruleId":"130","severity":1,"message":"134","line":2,"column":14,"nodeType":"132","messageId":"133","endLine":2,"endColumn":22},{"ruleId":"130","severity":1,"message":"135","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":21},{"ruleId":"130","severity":1,"message":"136","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":22},{"ruleId":"130","severity":1,"message":"137","line":17,"column":35,"nodeType":"132","messageId":"133","endLine":17,"endColumn":42},{"ruleId":"130","severity":1,"message":"138","line":6,"column":17,"nodeType":"132","messageId":"133","endLine":6,"endColumn":25},{"ruleId":"130","severity":1,"message":"139","line":7,"column":29,"nodeType":"132","messageId":"133","endLine":7,"endColumn":33},{"ruleId":"130","severity":1,"message":"140","line":5,"column":10,"nodeType":"132","messageId":"133","endLine":5,"endColumn":23},{"ruleId":"130","severity":1,"message":"141","line":24,"column":9,"nodeType":"132","messageId":"133","endLine":24,"endColumn":13},{"ruleId":"130","severity":1,"message":"142","line":25,"column":9,"nodeType":"132","messageId":"133","endLine":25,"endColumn":14},{"ruleId":"130","severity":1,"message":"143","line":26,"column":9,"nodeType":"132","messageId":"133","endLine":26,"endColumn":20},{"ruleId":"130","severity":1,"message":"144","line":27,"column":9,"nodeType":"132","messageId":"133","endLine":27,"endColumn":14},{"ruleId":"130","severity":1,"message":"145","line":28,"column":9,"nodeType":"132","messageId":"133","endLine":28,"endColumn":14},{"ruleId":"130","severity":1,"message":"146","line":30,"column":9,"nodeType":"132","messageId":"133","endLine":30,"endColumn":17},{"ruleId":"130","severity":1,"message":"137","line":31,"column":9,"nodeType":"132","messageId":"133","endLine":31,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":40,"column":8,"nodeType":"149","endLine":40,"endColumn":10,"suggestions":"150"},{"ruleId":"130","severity":1,"message":"145","line":28,"column":9,"nodeType":"132","messageId":"133","endLine":28,"endColumn":14},{"ruleId":"130","severity":1,"message":"146","line":30,"column":9,"nodeType":"132","messageId":"133","endLine":30,"endColumn":17},{"ruleId":"130","severity":1,"message":"137","line":31,"column":9,"nodeType":"132","messageId":"133","endLine":31,"endColumn":16},{"ruleId":"147","severity":1,"message":"151","line":43,"column":8,"nodeType":"149","endLine":43,"endColumn":10,"suggestions":"152"},{"ruleId":"147","severity":1,"message":"153","line":16,"column":7,"nodeType":"149","endLine":16,"endColumn":9,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'UserDashBoard' is defined but never used.","'AdminDashBoard' is defined but never used.","'loading' is assigned a value but never used.","'setError' is assigned a value but never used.","'role' is assigned a value but never used.","'createProduct' is defined but never used.","'name' is assigned a value but never used.","'price' is assigned a value but never used.","'description' is assigned a value but never used.","'stock' is assigned a value but never used.","'photo' is assigned a value but never used.","'category' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllCategories'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has missing dependencies: 'getThisProduct' and 'match.params.productId'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'match.params.categoryId'. Either include it or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [getAllCategories]",{"range":"166","text":"167"},"Update the dependencies array to be: [getThisProduct, match.params.productId]",{"range":"168","text":"169"},"Update the dependencies array to be: [match.params.categoryId]",{"range":"170","text":"171"},[1019,1021],"[getAllCategories]",[1101,1103],"[getThisProduct, match.params.productId]",[617,619],"[match.params.categoryId]"]